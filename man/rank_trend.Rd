% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rank_trend.R
\name{rank_trend}
\alias{rank_trend}
\title{rank_trend}
\usage{
rank_trend(
  new_data,
  old_data,
  numb_bins = 1L,
  comparison_var,
  id_vars,
  group_vars,
  trend_var,
  displace_old_zero = 1e-10
)
}
\arguments{
\item{new_data}{\code{data.table()} New version of data for comparison.}

\item{old_data}{\code{data.table()} Old version of data for comparison.}

\item{numb_bins}{\code{numeric()} numb_bins represents the number of bins to use
in the trend analysis within each grouping by group_vars. The default
numb_bins is 1, which would examine the change in the slope (i.e. change in
comparison_var over change in trend_var) by group_vars in the trend analysis,
and would examine changes greater than 1\% by group_vars in the level
analysis.}

\item{comparison_var}{\code{numeric()} Outcome variable to make comparisons
over.}

\item{id_vars}{Vector of variable names that uniquely identify
both new_data and old_data.}

\item{group_vars}{Level to summarize change variables for
ranking. group_vars are a subset of id_vars.}

\item{trend_var}{\code{numeric()} Predictor variable used to examine trend
changes. trend_var is a subset of id_vars of length 1.}

\item{displace_old_zero}{\code{numeric()} Displace zeros in old_data trend to
prevent NaNs in change calculations. Default is 1e-10.}
}
\value{
\code{data.table()} of ranked merged data.tables, which may be a subset
of the input data.tables. Rank number 1 corresponds to the greatest change
in comparison_var by group_vars between new_data and old_data, rank
number 2 corresponds to the second greatest change in comparison_var by
group_vars, etc. NOTE: Ranks may be duplicated by group if they have the same
values used for ranking.
}
\description{
Make comparisons between two versions of the same outcome by some grouping
variables where trend changes are ranked first by the number of slopes
changed sign and then by the greatest mean absolute percentage change to the
smallest.
}
\examples{
rank_trend(new_data,
           old_data_alt,
           numb_bins = 1L,
           comparison_var = "outcome",
           id_vars = c("year", "group"),
           group_vars = "group",
           trend_var = "year")
}
